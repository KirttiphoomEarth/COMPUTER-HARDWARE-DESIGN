Release 14.7 - xst P.20131013 (lin64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> 
Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.00 secs
 
--> 
Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.00 secs
 
--> 
Reading design: GAME.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "GAME.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "GAME"
Output Format                      : NGC
Target Device                      : xc6slx9-3-tqg144

---- Source Options
Top Module Name                    : GAME
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 16
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Parsing VHDL file "/home/ise/VM/vga_from_dee.vhd" into library work
Parsing entity <GAME>.
Parsing architecture <Behavioral> of entity <game>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating entity <GAME> (architecture <Behavioral>) from library <work>.
WARNING:HDLCompiler:871 - "/home/ise/VM/vga_from_dee.vhd" Line 747: Using initial value 0 for index since it is never assigned
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 781: getdata_1 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 782: get_data_int_1 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 787: getdata_2 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 788: get_data_int_2 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 793: getdata_3 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 794: get_data_int_3 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 799: getdata_4 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 800: get_data_int_4 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 805: getdata_5 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 806: get_data_int_5 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 811: getdata_6 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 812: get_data_int_6 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 817: getdata_7 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 818: get_data_int_7 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 823: getdata_8 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 824: get_data_int_8 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 829: getdata_9 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 830: get_data_int_9 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 835: getdata_10 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 836: get_data_int_10 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 842: char_sent should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 843: c_db should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 851: counter_up_pb2 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 869: char_l1 should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 870: c_db should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 878: counter_up should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 912: char_okay should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 913: c_db should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/home/ise/VM/vga_from_dee.vhd" Line 922: counter_up_next_char should be on the sensitivity list of the process
WARNING:HDLCompiler:1127 - "/home/ise/VM/vga_from_dee.vhd" Line 736: Assignment to copied_l2_9 ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/home/ise/VM/vga_from_dee.vhd" Line 1278: Assignment to tick ignored, since the identifier is never used

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <GAME>.
    Related source file is "/home/ise/VM/vga_from_dee.vhd".
WARNING:Xst:647 - Input <W> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <S> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <HACK> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <Char_sent> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <clear> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:2999 - Signal 'getData_10', unconnected in block 'GAME', is tied to its initial value.
    Found 1-bit register for signal <QT<0>>.
    Found 1-bit register for signal <QT<1>>.
    Found 10-bit register for signal <Data_Pack_Rx>.
    Found 1-bit register for signal <Start_bit_check>.
    Found 16-bit register for signal <Clk_Count_Rx>.
    Found 8-bit register for signal <Led>.
    Found 8-bit register for signal <getData_1>.
    Found 16-bit register for signal <Count_getData>.
    Found 8-bit register for signal <getData_2>.
    Found 8-bit register for signal <getData_3>.
    Found 8-bit register for signal <getData_4>.
    Found 8-bit register for signal <getData_5>.
    Found 8-bit register for signal <getData_6>.
    Found 8-bit register for signal <getData_7>.
    Found 8-bit register for signal <getData_8>.
    Found 5-bit register for signal <counter_up>.
    Found 4-bit register for signal <counter_up_next_char>.
    Found 1-bit register for signal <RED>.
    Found 1-bit register for signal <GREEN>.
    Found 1-bit register for signal <BLUE>.
    Found 10-bit register for signal <px>.
    Found 10-bit register for signal <py>.
    Found 1-bit register for signal <Tx_bit>.
    Found 4-bit register for signal <shift_bit>.
    Found 1-bit register for signal <Buzzer>.
    Found 16-bit register for signal <Clk_Count>.
    Found 4-bit register for signal <shift_bit_Rx>.
    Found 1-bit register for signal <Data_Pack<9>>.
    Found 1-bit register for signal <Data_Pack<8>>.
    Found 1-bit register for signal <Data_Pack<7>>.
    Found 1-bit register for signal <Data_Pack<6>>.
    Found 1-bit register for signal <Data_Pack<5>>.
    Found 1-bit register for signal <Data_Pack<4>>.
    Found 1-bit register for signal <Data_Pack<3>>.
    Found 1-bit register for signal <Data_Pack<2>>.
    Found 1-bit register for signal <Data_Pack<1>>.
    Found 1-bit register for signal <Data_Pack<0>>.
    Found 4-bit adder for signal <shift_bit_Rx[3]_GND_6_o_add_1_OUT> created at line 704.
    Found 16-bit adder for signal <Count_getData[15]_GND_6_o_add_21_OUT> created at line 719.
    Found 16-bit adder for signal <Clk_Count_Rx[15]_GND_6_o_add_76_OUT> created at line 726.
    Found 32-bit adder for signal <n4191> created at line 784.
    Found 32-bit adder for signal <n4192> created at line 784.
    Found 32-bit adder for signal <n4193> created at line 784.
    Found 32-bit adder for signal <n4194> created at line 784.
    Found 32-bit adder for signal <n4195> created at line 784.
    Found 32-bit adder for signal <n4196> created at line 784.
    Found 32-bit adder for signal <n4197> created at line 784.
    Found 32-bit adder for signal <n4198> created at line 784.
    Found 32-bit adder for signal <n4199> created at line 784.
    Found 32-bit adder for signal <n4200> created at line 784.
    Found 32-bit adder for signal <n4201> created at line 784.
    Found 32-bit adder for signal <n4202> created at line 784.
    Found 32-bit adder for signal <n4203> created at line 784.
    Found 32-bit adder for signal <n4204> created at line 784.
    Found 32-bit adder for signal <n4205> created at line 784.
    Found 32-bit adder for signal <n4209> created at line 790.
    Found 32-bit adder for signal <n4210> created at line 790.
    Found 32-bit adder for signal <n4211> created at line 790.
    Found 32-bit adder for signal <n4212> created at line 790.
    Found 32-bit adder for signal <n4213> created at line 790.
    Found 32-bit adder for signal <n4214> created at line 790.
    Found 32-bit adder for signal <n4215> created at line 790.
    Found 32-bit adder for signal <n4216> created at line 790.
    Found 32-bit adder for signal <n4217> created at line 790.
    Found 32-bit adder for signal <n4218> created at line 790.
    Found 32-bit adder for signal <n4219> created at line 790.
    Found 32-bit adder for signal <n4220> created at line 790.
    Found 32-bit adder for signal <n4221> created at line 790.
    Found 32-bit adder for signal <n4222> created at line 790.
    Found 32-bit adder for signal <n4223> created at line 790.
    Found 32-bit adder for signal <n4227> created at line 796.
    Found 32-bit adder for signal <n4228> created at line 796.
    Found 32-bit adder for signal <n4229> created at line 796.
    Found 32-bit adder for signal <n4230> created at line 796.
    Found 32-bit adder for signal <n4231> created at line 796.
    Found 32-bit adder for signal <n4232> created at line 796.
    Found 32-bit adder for signal <n4233> created at line 796.
    Found 32-bit adder for signal <n4234> created at line 796.
    Found 32-bit adder for signal <n4235> created at line 796.
    Found 32-bit adder for signal <n4236> created at line 796.
    Found 32-bit adder for signal <n4237> created at line 796.
    Found 32-bit adder for signal <n4238> created at line 796.
    Found 32-bit adder for signal <n4239> created at line 796.
    Found 32-bit adder for signal <n4240> created at line 796.
    Found 32-bit adder for signal <n4241> created at line 796.
    Found 32-bit adder for signal <n4245> created at line 802.
    Found 32-bit adder for signal <n4246> created at line 802.
    Found 32-bit adder for signal <n4247> created at line 802.
    Found 32-bit adder for signal <n4248> created at line 802.
    Found 32-bit adder for signal <n4249> created at line 802.
    Found 32-bit adder for signal <n4250> created at line 802.
    Found 32-bit adder for signal <n4251> created at line 802.
    Found 32-bit adder for signal <n4252> created at line 802.
    Found 32-bit adder for signal <n4253> created at line 802.
    Found 32-bit adder for signal <n4254> created at line 802.
    Found 32-bit adder for signal <n4255> created at line 802.
    Found 32-bit adder for signal <n4256> created at line 802.
    Found 32-bit adder for signal <n4257> created at line 802.
    Found 32-bit adder for signal <n4258> created at line 802.
    Found 32-bit adder for signal <n4259> created at line 802.
    Found 32-bit adder for signal <n4263> created at line 808.
    Found 32-bit adder for signal <n4264> created at line 808.
    Found 32-bit adder for signal <n4265> created at line 808.
    Found 32-bit adder for signal <n4266> created at line 808.
    Found 32-bit adder for signal <n4267> created at line 808.
    Found 32-bit adder for signal <n4268> created at line 808.
    Found 32-bit adder for signal <n4269> created at line 808.
    Found 32-bit adder for signal <n4270> created at line 808.
    Found 32-bit adder for signal <n4271> created at line 808.
    Found 32-bit adder for signal <n4272> created at line 808.
    Found 32-bit adder for signal <n4273> created at line 808.
    Found 32-bit adder for signal <n4274> created at line 808.
    Found 32-bit adder for signal <n4275> created at line 808.
    Found 32-bit adder for signal <n4276> created at line 808.
    Found 32-bit adder for signal <n4277> created at line 808.
    Found 32-bit adder for signal <n4281> created at line 814.
    Found 32-bit adder for signal <n4282> created at line 814.
    Found 32-bit adder for signal <n4283> created at line 814.
    Found 32-bit adder for signal <n4284> created at line 814.
    Found 32-bit adder for signal <n4285> created at line 814.
    Found 32-bit adder for signal <n4286> created at line 814.
    Found 32-bit adder for signal <n4287> created at line 814.
    Found 32-bit adder for signal <n4288> created at line 814.
    Found 32-bit adder for signal <n4289> created at line 814.
    Found 32-bit adder for signal <n4290> created at line 814.
    Found 32-bit adder for signal <n4291> created at line 814.
    Found 32-bit adder for signal <n4292> created at line 814.
    Found 32-bit adder for signal <n4293> created at line 814.
    Found 32-bit adder for signal <n4294> created at line 814.
    Found 32-bit adder for signal <n4295> created at line 814.
    Found 32-bit adder for signal <n4299> created at line 820.
    Found 32-bit adder for signal <n4300> created at line 820.
    Found 32-bit adder for signal <n4301> created at line 820.
    Found 32-bit adder for signal <n4302> created at line 820.
    Found 32-bit adder for signal <n4303> created at line 820.
    Found 32-bit adder for signal <n4304> created at line 820.
    Found 32-bit adder for signal <n4305> created at line 820.
    Found 32-bit adder for signal <n4306> created at line 820.
    Found 32-bit adder for signal <n4307> created at line 820.
    Found 32-bit adder for signal <n4308> created at line 820.
    Found 32-bit adder for signal <n4309> created at line 820.
    Found 32-bit adder for signal <n4310> created at line 820.
    Found 32-bit adder for signal <n4311> created at line 820.
    Found 32-bit adder for signal <n4312> created at line 820.
    Found 32-bit adder for signal <n4313> created at line 820.
    Found 32-bit adder for signal <n4317> created at line 826.
    Found 32-bit adder for signal <n4318> created at line 826.
    Found 32-bit adder for signal <n4319> created at line 826.
    Found 32-bit adder for signal <n4320> created at line 826.
    Found 32-bit adder for signal <n4321> created at line 826.
    Found 32-bit adder for signal <n4322> created at line 826.
    Found 32-bit adder for signal <n4323> created at line 826.
    Found 32-bit adder for signal <n4324> created at line 826.
    Found 32-bit adder for signal <n4325> created at line 826.
    Found 32-bit adder for signal <n4326> created at line 826.
    Found 32-bit adder for signal <n4327> created at line 826.
    Found 32-bit adder for signal <n4328> created at line 826.
    Found 32-bit adder for signal <n4329> created at line 826.
    Found 32-bit adder for signal <n4330> created at line 826.
    Found 32-bit adder for signal <n4331> created at line 826.
    Found 5-bit adder for signal <counter_up[4]_GND_6_o_add_507_OUT> created at line 872.
    Found 4-bit adder for signal <counter_up_next_char[3]_GND_6_o_add_513_OUT> created at line 915.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_523_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_525_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_527_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_529_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_531_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_533_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_535_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_537_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_539_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_541_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_543_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_545_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_547_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_549_OUT> created at line 925.
    Found 9-bit adder for signal <GND_6_o_counter_up[4]_add_551_OUT> created at line 925.
    Found 10-bit adder for signal <px[9]_GND_6_o_add_4067_OUT> created at line 1233.
    Found 10-bit adder for signal <py[9]_GND_6_o_add_4069_OUT> created at line 1236.
    Found 4-bit adder for signal <shift_bit[3]_GND_6_o_add_4078_OUT> created at line 1259.
    Found 16-bit adder for signal <Clk_Count[15]_GND_6_o_add_4081_OUT> created at line 1266.
    Found 28-bit subtractor for signal <GND_6_o_GND_6_o_sub_153_OUT<27:0>> created at line 79.
    Found 28-bit subtractor for signal <GND_6_o_GND_6_o_sub_188_OUT<27:0>> created at line 79.
    Found 28-bit subtractor for signal <GND_6_o_GND_6_o_sub_223_OUT<27:0>> created at line 79.
    Found 28-bit subtractor for signal <GND_6_o_GND_6_o_sub_258_OUT<27:0>> created at line 79.
    Found 28-bit subtractor for signal <GND_6_o_GND_6_o_sub_293_OUT<27:0>> created at line 79.
    Found 28-bit subtractor for signal <GND_6_o_GND_6_o_sub_328_OUT<27:0>> created at line 79.
    Found 28-bit subtractor for signal <GND_6_o_GND_6_o_sub_363_OUT<27:0>> created at line 79.
    Found 28-bit subtractor for signal <GND_6_o_GND_6_o_sub_398_OUT<27:0>> created at line 79.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3923_OUT<3:0>> created at line 1091.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3925_OUT<3:0>> created at line 1091.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3997_OUT<3:0>> created at line 1145.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3941_OUT<3:0>> created at line 1103.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3949_OUT<3:0>> created at line 1109.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3957_OUT<3:0>> created at line 1115.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3965_OUT<3:0>> created at line 1121.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3973_OUT<3:0>> created at line 1127.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3981_OUT<3:0>> created at line 1133.
    Found 4-bit subtractor for signal <GND_6_o_GND_6_o_sub_3989_OUT<3:0>> created at line 1139.
    Found 32x9-bit Read Only RAM for signal <index_char<8:0>>
    Found 512x8-bit Read Only RAM for signal <_n13858>
    Found 512x8-bit Read Only RAM for signal <_n14371>
    Found 512x8-bit Read Only RAM for signal <_n14884>
    Found 512x8-bit Read Only RAM for signal <_n15397>
    Found 512x8-bit Read Only RAM for signal <_n15910>
    Found 512x8-bit Read Only RAM for signal <_n16423>
    Found 512x8-bit Read Only RAM for signal <_n16936>
    Found 16x10-bit Read Only RAM for signal <_n16953>
    Found 512x8-bit Read Only RAM for signal <_n17466>
    Found 512x8-bit Read Only RAM for signal <_n17979>
    Found 512x8-bit Read Only RAM for signal <_n18492>
    Found 512x8-bit Read Only RAM for signal <_n19698>
    Found 512x8-bit Read Only RAM for signal <_n20211>
    Found 512x8-bit Read Only RAM for signal <_n20724>
    Found 512x8-bit Read Only RAM for signal <_n21237>
    Found 512x8-bit Read Only RAM for signal <_n21750>
    Found 512x8-bit Read Only RAM for signal <_n22263>
    Found 512x8-bit Read Only RAM for signal <_n23148>
    Found 512x8-bit Read Only RAM for signal <_n23661>
    Found 512x8-bit Read Only RAM for signal <_n24174>
    Found 512x8-bit Read Only RAM for signal <_n24687>
    Found 512x8-bit Read Only RAM for signal <_n25200>
    Found 512x8-bit Read Only RAM for signal <_n25713>
    Found 512x8-bit Read Only RAM for signal <_n26226>
    Found 512x8-bit Read Only RAM for signal <_n26739>
    Found 512x8-bit Read Only RAM for signal <_n27252>
    Found 512x8-bit Read Only RAM for signal <_n27765>
    Found 512x8-bit Read Only RAM for signal <_n28278>
    Found 512x8-bit Read Only RAM for signal <_n28791>
    Found 512x8-bit Read Only RAM for signal <_n29304>
    Found 512x8-bit Read Only RAM for signal <_n29817>
    Found 512x8-bit Read Only RAM for signal <_n30330>
    Found 512x8-bit Read Only RAM for signal <_n30843>
    Found 512x8-bit Read Only RAM for signal <_n31356>
    Found 512x8-bit Read Only RAM for signal <_n31869>
    Found 512x8-bit Read Only RAM for signal <_n32382>
    Found 512x8-bit Read Only RAM for signal <_n32895>
    Found 512x8-bit Read Only RAM for signal <_n33408>
    Found 512x8-bit Read Only RAM for signal <_n33921>
    Found 512x8-bit Read Only RAM for signal <_n34434>
    Found 512x8-bit Read Only RAM for signal <_n34947>
    Found 512x8-bit Read Only RAM for signal <_n35460>
    Found 512x8-bit Read Only RAM for signal <_n35973>
    Found 512x8-bit Read Only RAM for signal <_n36486>
    Found 512x8-bit Read Only RAM for signal <_n36999>
    Found 512x8-bit Read Only RAM for signal <_n37512>
    Found 512x8-bit Read Only RAM for signal <_n38025>
    Found 512x8-bit Read Only RAM for signal <_n38538>
    Found 512x8-bit Read Only RAM for signal <_n39051>
    Found 512x8-bit Read Only RAM for signal <_n39564>
    Found 512x8-bit Read Only RAM for signal <_n40077>
    Found 512x8-bit Read Only RAM for signal <_n40590>
    Found 512x8-bit Read Only RAM for signal <_n41103>
    Found 512x8-bit Read Only RAM for signal <_n41616>
    Found 512x8-bit Read Only RAM for signal <_n42129>
    Found 512x8-bit Read Only RAM for signal <_n42642>
    Found 512x8-bit Read Only RAM for signal <_n43155>
    Found 512x8-bit Read Only RAM for signal <_n43668>
    Found 512x8-bit Read Only RAM for signal <_n44181>
    Found 512x8-bit Read Only RAM for signal <_n44694>
    Found 512x8-bit Read Only RAM for signal <_n45207>
    Found 512x8-bit Read Only RAM for signal <_n45720>
    Found 512x8-bit Read Only RAM for signal <_n46233>
    Found 512x8-bit Read Only RAM for signal <_n46746>
    Found 512x8-bit Read Only RAM for signal <_n47259>
    Found 512x8-bit Read Only RAM for signal <_n47772>
    Found 512x8-bit Read Only RAM for signal <_n48285>
    Found 512x8-bit Read Only RAM for signal <_n48798>
    Found 512x8-bit Read Only RAM for signal <_n49311>
    Found 512x8-bit Read Only RAM for signal <_n49824>
    Found 512x8-bit Read Only RAM for signal <_n50337>
    Found 512x8-bit Read Only RAM for signal <_n50850>
    Found 512x8-bit Read Only RAM for signal <_n51363>
    Found 512x8-bit Read Only RAM for signal <_n51876>
    Found 512x8-bit Read Only RAM for signal <_n52389>
    Found 512x8-bit Read Only RAM for signal <_n52902>
    Found 512x8-bit Read Only RAM for signal <_n53415>
    Found 512x8-bit Read Only RAM for signal <_n53928>
    Found 512x8-bit Read Only RAM for signal <_n54441>
    Found 512x8-bit Read Only RAM for signal <_n54954>
    Found 512x8-bit Read Only RAM for signal <_n55467>
    Found 512x8-bit Read Only RAM for signal <_n55980>
    Found 512x8-bit Read Only RAM for signal <_n56493>
    Found 512x8-bit Read Only RAM for signal <_n57006>
    Found 512x8-bit Read Only RAM for signal <_n57519>
    Found 512x8-bit Read Only RAM for signal <_n58032>
    Found 512x8-bit Read Only RAM for signal <_n58545>
    Found 512x8-bit Read Only RAM for signal <_n59058>
    Found 512x8-bit Read Only RAM for signal <_n59571>
    Found 512x8-bit Read Only RAM for signal <_n60084>
    Found 512x8-bit Read Only RAM for signal <_n60597>
    Found 512x8-bit Read Only RAM for signal <_n61110>
    Found 512x8-bit Read Only RAM for signal <_n61623>
    Found 512x8-bit Read Only RAM for signal <_n62136>
    Found 512x8-bit Read Only RAM for signal <_n62649>
    Found 512x8-bit Read Only RAM for signal <_n63162>
    Found 512x8-bit Read Only RAM for signal <_n63675>
    Found 512x8-bit Read Only RAM for signal <_n64188>
    Found 512x8-bit Read Only RAM for signal <_n64701>
    Found 512x8-bit Read Only RAM for signal <_n65214>
    Found 512x8-bit Read Only RAM for signal <_n65727>
    Found 512x8-bit Read Only RAM for signal <_n66240>
    Found 512x8-bit Read Only RAM for signal <_n66753>
    Found 512x8-bit Read Only RAM for signal <_n67266>
    Found 512x8-bit Read Only RAM for signal <_n67779>
    Found 512x8-bit Read Only RAM for signal <_n68292>
    Found 512x8-bit Read Only RAM for signal <_n68805>
    Found 512x8-bit Read Only RAM for signal <_n69318>
    Found 512x8-bit Read Only RAM for signal <_n69831>
    Found 512x8-bit Read Only RAM for signal <_n70344>
    Found 512x8-bit Read Only RAM for signal <_n70857>
    Found 512x8-bit Read Only RAM for signal <_n71370>
    Found 512x8-bit Read Only RAM for signal <_n71883>
    Found 512x8-bit Read Only RAM for signal <_n72396>
    Found 512x8-bit Read Only RAM for signal <_n72909>
    Found 512x8-bit Read Only RAM for signal <_n73422>
    Found 512x8-bit Read Only RAM for signal <_n73935>
    Found 512x8-bit Read Only RAM for signal <_n74448>
    Found 512x8-bit Read Only RAM for signal <_n74961>
    Found 512x8-bit Read Only RAM for signal <_n75474>
    Found 512x8-bit Read Only RAM for signal <_n75987>
    Found 512x8-bit Read Only RAM for signal <_n76500>
    Found 512x8-bit Read Only RAM for signal <_n77013>
    Found 512x8-bit Read Only RAM for signal <_n77526>
    Found 512x8-bit Read Only RAM for signal <_n78039>
    Found 512x8-bit Read Only RAM for signal <_n78552>
    Found 512x8-bit Read Only RAM for signal <_n79065>
    Found 512x8-bit Read Only RAM for signal <_n79578>
    Found 512x8-bit Read Only RAM for signal <_n80091>
    Found 512x8-bit Read Only RAM for signal <_n80604>
    Found 512x8-bit Read Only RAM for signal <_n81117>
    Found 512x8-bit Read Only RAM for signal <_n81630>
    Found 512x8-bit Read Only RAM for signal <_n82143>
    Found 512x8-bit Read Only RAM for signal <_n82656>
    Found 512x8-bit Read Only RAM for signal <_n83169>
    Found 512x8-bit Read Only RAM for signal <_n83682>
    Found 512x8-bit Read Only RAM for signal <_n84195>
    Found 512x8-bit Read Only RAM for signal <_n84708>
    Found 512x8-bit Read Only RAM for signal <_n85221>
    Found 512x8-bit Read Only RAM for signal <_n85734>
    Found 512x8-bit Read Only RAM for signal <_n86247>
    Found 512x8-bit Read Only RAM for signal <_n86760>
    Found 512x8-bit Read Only RAM for signal <_n87273>
    Found 512x8-bit Read Only RAM for signal <_n87786>
    Found 512x8-bit Read Only RAM for signal <_n88299>
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3925_o> created at line 1091.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3933_o> created at line 1097.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3941_o> created at line 1103.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3949_o> created at line 1109.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3957_o> created at line 1115.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3965_o> created at line 1121.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3973_o> created at line 1127.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3981_o> created at line 1133.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3989_o> created at line 1139.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_3997_o> created at line 1145.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_4005_o> created at line 1152.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_4013_o> created at line 1158.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_4021_o> created at line 1164.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_4029_o> created at line 1170.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_4037_o> created at line 1176.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_4045_o> created at line 1182.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_4053_o> created at line 1188.
    Found 1-bit 9-to-1 multiplexer for signal <GND_6_o_X_6_o_Mux_4061_o> created at line 1194.
    Found 1-bit 10-to-1 multiplexer for signal <shift_bit[3]_X_6_o_Mux_4077_o> created at line 1258.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<8>> created at line 1158.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<7>> created at line 1158.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<6>> created at line 1158.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<5>> created at line 1158.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<4>> created at line 1158.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<3>> created at line 1158.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<2>> created at line 1158.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<1>> created at line 1158.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_3[15][0]_wide_mux_4019_OUT<8>> created at line 1164.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_3[15][0]_wide_mux_4019_OUT<7>> created at line 1164.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_3[15][0]_wide_mux_4019_OUT<6>> created at line 1164.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_3[15][0]_wide_mux_4019_OUT<5>> created at line 1164.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_3[15][0]_wide_mux_4019_OUT<4>> created at line 1164.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_3[15][0]_wide_mux_4019_OUT<3>> created at line 1164.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_3[15][0]_wide_mux_4019_OUT<2>> created at line 1164.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_3[15][0]_wide_mux_4019_OUT<1>> created at line 1164.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_4[15][0]_wide_mux_4027_OUT<8>> created at line 1170.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_4[15][0]_wide_mux_4027_OUT<7>> created at line 1170.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_4[15][0]_wide_mux_4027_OUT<6>> created at line 1170.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_4[15][0]_wide_mux_4027_OUT<5>> created at line 1170.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_4[15][0]_wide_mux_4027_OUT<4>> created at line 1170.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_4[15][0]_wide_mux_4027_OUT<3>> created at line 1170.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_4[15][0]_wide_mux_4027_OUT<2>> created at line 1170.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_4[15][0]_wide_mux_4027_OUT<1>> created at line 1170.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_5[15][0]_wide_mux_4035_OUT<8>> created at line 1176.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_5[15][0]_wide_mux_4035_OUT<7>> created at line 1176.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_5[15][0]_wide_mux_4035_OUT<6>> created at line 1176.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_5[15][0]_wide_mux_4035_OUT<5>> created at line 1176.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_5[15][0]_wide_mux_4035_OUT<4>> created at line 1176.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_5[15][0]_wide_mux_4035_OUT<3>> created at line 1176.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_5[15][0]_wide_mux_4035_OUT<2>> created at line 1176.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_5[15][0]_wide_mux_4035_OUT<1>> created at line 1176.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_6[15][0]_wide_mux_4043_OUT<8>> created at line 1182.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_6[15][0]_wide_mux_4043_OUT<7>> created at line 1182.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_6[15][0]_wide_mux_4043_OUT<6>> created at line 1182.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_6[15][0]_wide_mux_4043_OUT<5>> created at line 1182.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_6[15][0]_wide_mux_4043_OUT<4>> created at line 1182.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_6[15][0]_wide_mux_4043_OUT<3>> created at line 1182.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_6[15][0]_wide_mux_4043_OUT<2>> created at line 1182.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_6[15][0]_wide_mux_4043_OUT<1>> created at line 1182.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_7[15][0]_wide_mux_4051_OUT<8>> created at line 1188.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_7[15][0]_wide_mux_4051_OUT<7>> created at line 1188.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_7[15][0]_wide_mux_4051_OUT<6>> created at line 1188.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_7[15][0]_wide_mux_4051_OUT<5>> created at line 1188.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_7[15][0]_wide_mux_4051_OUT<4>> created at line 1188.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_7[15][0]_wide_mux_4051_OUT<3>> created at line 1188.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_7[15][0]_wide_mux_4051_OUT<2>> created at line 1188.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_7[15][0]_wide_mux_4051_OUT<1>> created at line 1188.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_8[15][0]_wide_mux_4059_OUT<8>> created at line 1194.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_8[15][0]_wide_mux_4059_OUT<7>> created at line 1194.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_8[15][0]_wide_mux_4059_OUT<6>> created at line 1194.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_8[15][0]_wide_mux_4059_OUT<5>> created at line 1194.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_8[15][0]_wide_mux_4059_OUT<4>> created at line 1194.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_8[15][0]_wide_mux_4059_OUT<3>> created at line 1194.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_8[15][0]_wide_mux_4059_OUT<2>> created at line 1194.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_8[15][0]_wide_mux_4059_OUT<1>> created at line 1194.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_1[15][0]_wide_mux_4003_OUT<8>> created at line 1152.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_1[15][0]_wide_mux_4003_OUT<7>> created at line 1152.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_1[15][0]_wide_mux_4003_OUT<6>> created at line 1152.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_1[15][0]_wide_mux_4003_OUT<5>> created at line 1152.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_1[15][0]_wide_mux_4003_OUT<4>> created at line 1152.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_1[15][0]_wide_mux_4003_OUT<3>> created at line 1152.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_1[15][0]_wide_mux_4003_OUT<2>> created at line 1152.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_L2_1[15][0]_wide_mux_4003_OUT<1>> created at line 1152.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_1[15][0]_wide_mux_3923_OUT<8>> created at line 1091.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_1[15][0]_wide_mux_3923_OUT<7>> created at line 1091.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_1[15][0]_wide_mux_3923_OUT<6>> created at line 1091.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_1[15][0]_wide_mux_3923_OUT<5>> created at line 1091.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_1[15][0]_wide_mux_3923_OUT<4>> created at line 1091.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_1[15][0]_wide_mux_3923_OUT<3>> created at line 1091.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_1[15][0]_wide_mux_3923_OUT<2>> created at line 1091.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_1[15][0]_wide_mux_3923_OUT<1>> created at line 1091.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_2[15][0]_wide_mux_3931_OUT<8>> created at line 1097.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_2[15][0]_wide_mux_3931_OUT<7>> created at line 1097.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_2[15][0]_wide_mux_3931_OUT<6>> created at line 1097.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_2[15][0]_wide_mux_3931_OUT<5>> created at line 1097.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_2[15][0]_wide_mux_3931_OUT<4>> created at line 1097.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_2[15][0]_wide_mux_3931_OUT<3>> created at line 1097.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_2[15][0]_wide_mux_3931_OUT<2>> created at line 1097.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_2[15][0]_wide_mux_3931_OUT<1>> created at line 1097.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_3[15][0]_wide_mux_3939_OUT<8>> created at line 1103.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_3[15][0]_wide_mux_3939_OUT<7>> created at line 1103.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_3[15][0]_wide_mux_3939_OUT<6>> created at line 1103.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_3[15][0]_wide_mux_3939_OUT<5>> created at line 1103.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_3[15][0]_wide_mux_3939_OUT<4>> created at line 1103.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_3[15][0]_wide_mux_3939_OUT<3>> created at line 1103.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_3[15][0]_wide_mux_3939_OUT<2>> created at line 1103.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_3[15][0]_wide_mux_3939_OUT<1>> created at line 1103.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_4[15][0]_wide_mux_3947_OUT<8>> created at line 1109.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_4[15][0]_wide_mux_3947_OUT<7>> created at line 1109.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_4[15][0]_wide_mux_3947_OUT<6>> created at line 1109.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_4[15][0]_wide_mux_3947_OUT<5>> created at line 1109.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_4[15][0]_wide_mux_3947_OUT<4>> created at line 1109.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_4[15][0]_wide_mux_3947_OUT<3>> created at line 1109.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_4[15][0]_wide_mux_3947_OUT<2>> created at line 1109.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_4[15][0]_wide_mux_3947_OUT<1>> created at line 1109.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_5[15][0]_wide_mux_3955_OUT<8>> created at line 1115.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_5[15][0]_wide_mux_3955_OUT<7>> created at line 1115.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_5[15][0]_wide_mux_3955_OUT<6>> created at line 1115.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_5[15][0]_wide_mux_3955_OUT<5>> created at line 1115.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_5[15][0]_wide_mux_3955_OUT<4>> created at line 1115.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_5[15][0]_wide_mux_3955_OUT<3>> created at line 1115.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_5[15][0]_wide_mux_3955_OUT<2>> created at line 1115.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_5[15][0]_wide_mux_3955_OUT<1>> created at line 1115.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_6[15][0]_wide_mux_3963_OUT<8>> created at line 1121.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_6[15][0]_wide_mux_3963_OUT<7>> created at line 1121.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_6[15][0]_wide_mux_3963_OUT<6>> created at line 1121.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_6[15][0]_wide_mux_3963_OUT<5>> created at line 1121.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_6[15][0]_wide_mux_3963_OUT<4>> created at line 1121.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_6[15][0]_wide_mux_3963_OUT<3>> created at line 1121.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_6[15][0]_wide_mux_3963_OUT<2>> created at line 1121.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_6[15][0]_wide_mux_3963_OUT<1>> created at line 1121.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_7[15][0]_wide_mux_3971_OUT<8>> created at line 1127.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_7[15][0]_wide_mux_3971_OUT<7>> created at line 1127.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_7[15][0]_wide_mux_3971_OUT<6>> created at line 1127.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_7[15][0]_wide_mux_3971_OUT<5>> created at line 1127.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_7[15][0]_wide_mux_3971_OUT<4>> created at line 1127.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_7[15][0]_wide_mux_3971_OUT<3>> created at line 1127.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_7[15][0]_wide_mux_3971_OUT<2>> created at line 1127.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_7[15][0]_wide_mux_3971_OUT<1>> created at line 1127.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_8[15][0]_wide_mux_3979_OUT<8>> created at line 1133.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_8[15][0]_wide_mux_3979_OUT<7>> created at line 1133.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_8[15][0]_wide_mux_3979_OUT<6>> created at line 1133.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_8[15][0]_wide_mux_3979_OUT<5>> created at line 1133.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_8[15][0]_wide_mux_3979_OUT<4>> created at line 1133.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_8[15][0]_wide_mux_3979_OUT<3>> created at line 1133.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_8[15][0]_wide_mux_3979_OUT<2>> created at line 1133.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_8[15][0]_wide_mux_3979_OUT<1>> created at line 1133.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_9[15][0]_wide_mux_3987_OUT<8>> created at line 1139.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_9[15][0]_wide_mux_3987_OUT<7>> created at line 1139.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_9[15][0]_wide_mux_3987_OUT<6>> created at line 1139.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_9[15][0]_wide_mux_3987_OUT<5>> created at line 1139.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_9[15][0]_wide_mux_3987_OUT<4>> created at line 1139.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_9[15][0]_wide_mux_3987_OUT<3>> created at line 1139.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_9[15][0]_wide_mux_3987_OUT<2>> created at line 1139.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_9[15][0]_wide_mux_3987_OUT<1>> created at line 1139.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_10[15][0]_wide_mux_3995_OUT<8>> created at line 1145.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_10[15][0]_wide_mux_3995_OUT<7>> created at line 1145.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_10[15][0]_wide_mux_3995_OUT<6>> created at line 1145.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_10[15][0]_wide_mux_3995_OUT<5>> created at line 1145.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_10[15][0]_wide_mux_3995_OUT<4>> created at line 1145.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_10[15][0]_wide_mux_3995_OUT<3>> created at line 1145.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_10[15][0]_wide_mux_3995_OUT<2>> created at line 1145.
    Found 1-bit 16-to-1 multiplexer for signal <GND_6_o_copied_10[15][0]_wide_mux_3995_OUT<1>> created at line 1145.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_1<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_2<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_3<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_4<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_5<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_6<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_7<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_8<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_9<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<8><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<8><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<8><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<8><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<8><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<8><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<8><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<8><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<9><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<9><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<9><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<9><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<9><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<9><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<9><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<9><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<10><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<10><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<10><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<10><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<10><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<10><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<10><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<10><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<11><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<11><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<11><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<11><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<11><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<11><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<11><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<11><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<12><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<12><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<12><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<12><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<12><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<12><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<12><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<12><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<13><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<13><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<13><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<13><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<13><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<13><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<13><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<13><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<14><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<14><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<14><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<14><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<14><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<14><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<14><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<14><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<15><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<15><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<15><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<15><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<15><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<15><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<15><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <copied_10<15><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Found 10-bit comparator lessequal for signal <n3632> created at line 70
    Found 10-bit comparator lessequal for signal <n3634> created at line 70
    Found 10-bit comparator lessequal for signal <n3636> created at line 70
    Found 10-bit comparator lessequal for signal <n3638> created at line 70
    Found 10-bit comparator lessequal for signal <n3648> created at line 70
    Found 10-bit comparator lessequal for signal <n3650> created at line 70
    Found 10-bit comparator lessequal for signal <n3660> created at line 70
    Found 10-bit comparator lessequal for signal <n3662> created at line 70
    Found 10-bit comparator lessequal for signal <n3672> created at line 70
    Found 10-bit comparator lessequal for signal <n3674> created at line 70
    Found 10-bit comparator lessequal for signal <n3684> created at line 70
    Found 10-bit comparator lessequal for signal <n3686> created at line 70
    Found 10-bit comparator lessequal for signal <n3696> created at line 70
    Found 10-bit comparator lessequal for signal <n3698> created at line 70
    Found 10-bit comparator lessequal for signal <n3708> created at line 70
    Found 10-bit comparator lessequal for signal <n3710> created at line 70
    Found 10-bit comparator lessequal for signal <n3720> created at line 70
    Found 10-bit comparator lessequal for signal <n3722> created at line 70
    Found 10-bit comparator lessequal for signal <n3732> created at line 70
    Found 10-bit comparator lessequal for signal <n3734> created at line 70
    Found 10-bit comparator lessequal for signal <n3744> created at line 70
    Found 10-bit comparator lessequal for signal <n3746> created at line 70
    Found 10-bit comparator lessequal for signal <n3756> created at line 70
    Found 10-bit comparator lessequal for signal <n3758> created at line 70
    Found 10-bit comparator lessequal for signal <n3825> created at line 70
    Found 10-bit comparator lessequal for signal <n3827> created at line 70
    Found 10-bit comparator lessequal for signal <n3829> created at line 70
    Found 10-bit comparator lessequal for signal <n3836> created at line 1227
    Found 10-bit comparator lessequal for signal <n3838> created at line 1227
    Found 10-bit comparator lessequal for signal <n3875> created at line 1275
    Found 10-bit comparator greater for signal <px[9]_PWR_6_o_LessThan_4090_o> created at line 1275
    Found 10-bit comparator lessequal for signal <n3880> created at line 1276
    Found 10-bit comparator greater for signal <py[9]_GND_6_o_LessThan_4092_o> created at line 1276
    Summary:
	inferred 146 RAM(s).
	inferred 162 Adder/Subtractor(s).
	inferred 185 D-type flip-flop(s).
	inferred 1290 Latch(s).
	inferred  33 Comparator(s).
	inferred 249 Multiplexer(s).
Unit <GAME> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 146
 16x10-bit single-port Read Only RAM                   : 1
 32x9-bit single-port Read Only RAM                    : 1
 512x8-bit single-port Read Only RAM                   : 144
# Adders/Subtractors                                   : 162
 10-bit adder                                          : 2
 16-bit adder                                          : 3
 28-bit subtractor                                     : 8
 32-bit adder                                          : 120
 4-bit adder                                           : 3
 4-bit subtractor                                      : 10
 5-bit adder                                           : 1
 9-bit adder                                           : 15
# Registers                                            : 37
 1-bit register                                        : 18
 10-bit register                                       : 3
 16-bit register                                       : 3
 4-bit register                                        : 3
 5-bit register                                        : 1
 8-bit register                                        : 9
# Latches                                              : 1290
 1-bit latch                                           : 1290
# Comparators                                          : 33
 10-bit comparator greater                             : 2
 10-bit comparator lessequal                           : 31
# Multiplexers                                         : 249
 1-bit 10-to-1 multiplexer                             : 1
 1-bit 16-to-1 multiplexer                             : 144
 1-bit 2-to-1 multiplexer                              : 74
 1-bit 9-to-1 multiplexer                              : 18
 10-bit 2-to-1 multiplexer                             : 2
 16-bit 2-to-1 multiplexer                             : 1
 32-bit 2-to-1 multiplexer                             : 8
 4-bit 2-to-1 multiplexer                              : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

WARNING:Xst:1710 - FF/Latch <copied_10<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_7> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_6> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_5> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_4> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_3> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_2> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_1> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_0> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.

Synthesizing (advanced) Unit <GAME>.
The following registers are absorbed into counter <px>: 1 register on signal <px>.
The following registers are absorbed into counter <py>: 1 register on signal <py>.
The following registers are absorbed into counter <Count_getData>: 1 register on signal <Count_getData>.
The following registers are absorbed into counter <Clk_Count>: 1 register on signal <Clk_Count>.
The following registers are absorbed into counter <Clk_Count_Rx>: 1 register on signal <Clk_Count_Rx>.
The following registers are absorbed into counter <shift_bit>: 1 register on signal <shift_bit>.
The following registers are absorbed into counter <shift_bit_Rx>: 1 register on signal <shift_bit_Rx>.
The following registers are absorbed into counter <counter_up>: 1 register on signal <counter_up>.
The following registers are absorbed into counter <counter_up_next_char>: 1 register on signal <counter_up_next_char>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_index_char<8:0>> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 32-word x 9-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <counter_up>    |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <index_char>    |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n16953> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 10-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <counter_up_next_char> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n18492> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <index_char>    |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n39564> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4190>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n40077> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4208>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n31356> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4226>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n23148> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4244>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n40590> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4262>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n41103> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4280>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n41616> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4298>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n42129> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4316>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n19698> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_523_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n15397> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_525_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n17466> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_527_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n20211> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_529_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n15910> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_531_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n20724> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_533_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n13858> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_535_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n14371> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_537_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n21237> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_539_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n16423> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_541_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n16936> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_543_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n21750> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_545_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n17979> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_547_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n14884> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_549_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n22263> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <GND_6_o_counter_up[4]_add_551_OUT> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n42642> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4191>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n43155> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4192>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n43668> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4193>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n44181> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4194>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n44694> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4195>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n45207> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4196>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n45720> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4197>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n46233> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4198>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n46746> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4199>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n47259> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4200>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n47772> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4201>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n48285> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4202>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n48798> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4203>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n49311> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4204>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n49824> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4205>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n50337> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4209>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n50850> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4210>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n51363> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4211>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n51876> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4212>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n52389> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4213>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n52902> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4214>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n53415> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4215>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n53928> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4216>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n54441> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4217>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n54954> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4218>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n55467> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4219>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n55980> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4220>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n56493> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4221>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n57006> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4222>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n57519> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4223>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n31869> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4227>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n32382> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4228>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n32895> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4229>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n33408> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4230>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n33921> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4231>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n34434> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4232>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n34947> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4233>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n35460> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4234>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n35973> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4235>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n36486> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4236>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n36999> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4237>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n37512> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4238>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n38025> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4239>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n38538> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4240>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n39051> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4241>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n23661> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4245>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n24174> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4246>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n24687> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4247>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n25200> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4248>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n25713> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4249>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n26226> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4250>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n26739> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4251>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n27252> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4252>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n27765> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4253>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n28278> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4254>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n28791> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4255>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n29304> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4256>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n29817> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4257>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n30330> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4258>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n30843> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4259>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n58032> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4263>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n58545> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4264>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n59058> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4265>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n59571> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4266>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n60084> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4267>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n60597> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4268>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n61110> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4269>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n61623> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4270>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n62136> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4271>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n62649> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4272>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n63162> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4273>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n63675> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4274>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n64188> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4275>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n64701> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4276>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n65214> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4277>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n65727> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4281>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n66240> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4282>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n66753> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4283>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n67266> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4284>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n67779> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4285>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n68292> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4286>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n68805> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4287>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n69318> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4288>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n69831> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4289>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n70344> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4290>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n70857> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4291>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n71370> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4292>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n71883> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4293>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n72396> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4294>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n72909> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4295>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n73422> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4299>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n73935> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4300>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n74448> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4301>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n74961> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4302>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n75474> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4303>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n75987> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4304>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n76500> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4305>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n77013> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4306>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n77526> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4307>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n78039> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4308>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n78552> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4309>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n79065> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4310>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n79578> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4311>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n80091> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4312>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n80604> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4313>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n81117> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4317>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n81630> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4318>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n82143> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4319>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n82656> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4320>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n83169> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4321>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n83682> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4322>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n84195> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4323>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n84708> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4324>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n85221> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4325>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n85734> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4326>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n86247> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4327>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n86760> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4328>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n87273> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4329>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n87786> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4330>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n88299> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 8-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <n4331>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
Unit <GAME> synthesized (advanced).
WARNING:Xst:2677 - Node <Data_Pack_Rx_0> of sequential type is unconnected in block <GAME>.
WARNING:Xst:2677 - Node <Data_Pack_Rx_9> of sequential type is unconnected in block <GAME>.

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 146
 16x10-bit single-port distributed Read Only RAM       : 1
 32x9-bit single-port distributed Read Only RAM        : 1
 512x8-bit single-port distributed Read Only RAM       : 144
# Adders/Subtractors                                   : 153
 28-bit subtractor                                     : 8
 4-bit subtractor                                      : 10
 9-bit adder                                           : 135
# Counters                                             : 9
 10-bit up counter                                     : 2
 16-bit up counter                                     : 3
 4-bit up counter                                      : 3
 5-bit up counter                                      : 1
# Registers                                            : 98
 Flip-Flops                                            : 98
# Comparators                                          : 33
 10-bit comparator greater                             : 2
 10-bit comparator lessequal                           : 31
# Multiplexers                                         : 245
 1-bit 10-to-1 multiplexer                             : 1
 1-bit 16-to-1 multiplexer                             : 144
 1-bit 2-to-1 multiplexer                              : 72
 1-bit 9-to-1 multiplexer                              : 18
 10-bit 2-to-1 multiplexer                             : 2
 32-bit 2-to-1 multiplexer                             : 8

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
WARNING:Xst:1710 - FF/Latch <copied_10<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_7> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_6> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_5> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_4> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_3> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_2> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_1> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Led_0> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_9<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_8<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_10<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <Data_Pack_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <Data_Pack_8> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_7<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_6<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_5<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<0>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_4<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<13>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<13>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<13>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<12>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<13>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<12>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<12>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<12>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_1<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<12>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<12>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<1>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<1>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<1>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<1>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<1>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<1>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<1>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_3<1>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<15>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<15>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<15>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<15>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<15>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<15>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<15>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<14>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<14>_6> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<15>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<14>_5> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<14>_4> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<14>_3> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<14>_2> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<14>_1> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<14>_0> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <copied_2<13>_7> (without init value) has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:3002 - This design contains one or more registers/latches that are directly
   incompatible with the Spartan6 architecture. The two primary causes of this is
   either a register or latch described with both an asynchronous set and
   asynchronous reset, or a register or latch described with an asynchronous
   set or reset which however has an initialization value of the opposite 
   polarity (i.e. asynchronous reset with an initialization value of 1).
    While this circuit can be built, it creates a sub-optimal implementation
   in terms of area, power and performance. For a more optimal implementation
   Xilinx highly recommends one of the following:

          1) Remove either the set or reset from all registers and latches
             if not needed for required functionality
          2) Modify the code in order to produce a synchronous set
             and/or reset (both is preferred)
          3) Ensure all registers have the same initialization value as the
             described asynchronous set or reset polarity
          4) Use the -async_to_sync option to transform the asynchronous
             set/reset to synchronous operation
             (timing simulation highly recommended when using this option)

  Please refer to http://www.xilinx.com search string "Spartan6 asynchronous set/reset" for more details.

  List of register instances with asynchronous set and reset:
    Data_Pack_1 in unit <GAME>
    Data_Pack_2 in unit <GAME>
    Data_Pack_3 in unit <GAME>
    Data_Pack_4 in unit <GAME>
    Data_Pack_5 in unit <GAME>
    Data_Pack_6 in unit <GAME>
    Data_Pack_7 in unit <GAME>


Optimizing unit <GAME> ...
WARNING:Xst:1710 - FF/Latch <Data_Pack_9> (without init value) has a constant value of 1 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:2677 - Node <Data_Pack_Rx_6> of sequential type is unconnected in block <GAME>.
WARNING:Xst:2677 - Node <Data_Pack_Rx_7> of sequential type is unconnected in block <GAME>.
WARNING:Xst:2677 - Node <Data_Pack_Rx_8> of sequential type is unconnected in block <GAME>.
WARNING:Xst:1293 - FF/Latch <Count_getData_4> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_5> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_6> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_7> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_8> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_9> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_10> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_11> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_12> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_13> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_14> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Count_getData_15> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Clk_Count_14> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <Clk_Count_15> has a constant value of 0 in block <GAME>. This FF/Latch will be trimmed during the optimization process.

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block GAME, actual ratio is 46.
FlipFlop getData_1_0 has been replicated 1 time(s)
FlipFlop getData_1_1 has been replicated 1 time(s)
FlipFlop getData_2_0 has been replicated 1 time(s)
FlipFlop getData_2_1 has been replicated 1 time(s)
FlipFlop getData_4_0 has been replicated 1 time(s)
FlipFlop getData_4_1 has been replicated 1 time(s)
FlipFlop getData_6_0 has been replicated 1 time(s)
FlipFlop getData_6_1 has been replicated 1 time(s)
FlipFlop getData_7_0 has been replicated 1 time(s)
FlipFlop getData_7_1 has been replicated 1 time(s)
FlipFlop getData_8_0 has been replicated 1 time(s)
FlipFlop getData_8_1 has been replicated 1 time(s)
FlipFlop py_0 has been replicated 3 time(s)
FlipFlop py_1 has been replicated 3 time(s)
FlipFlop py_2 has been replicated 2 time(s)
FlipFlop py_3 has been replicated 1 time(s)

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 159
 Flip-Flops                                            : 159

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : GAME.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 2263
#      GND                         : 1
#      INV                         : 54
#      LUT1                        : 49
#      LUT2                        : 55
#      LUT3                        : 91
#      LUT4                        : 166
#      LUT5                        : 826
#      LUT6                        : 495
#      MUXCY                       : 49
#      MUXF7                       : 286
#      MUXF8                       : 136
#      VCC                         : 1
#      XORCY                       : 54
# FlipFlops/Latches                : 1016
#      FD                          : 1
#      FDC                         : 9
#      FDE                         : 52
#      FDP                         : 7
#      FDR                         : 14
#      FDRE                        : 75
#      FDS                         : 1
#      LD                          : 850
#      LDC                         : 7
# Clock Buffers                    : 8
#      BUFG                        : 8
# IO Buffers                       : 22
#      IBUF                        : 6
#      OBUF                        : 16

Device utilization summary:
---------------------------

Selected Device : 6slx9tqg144-3 


Slice Logic Utilization: 
 Number of Slice Registers:            1016  out of  11440     8%  
 Number of Slice LUTs:                 1736  out of   5720    30%  
    Number used as Logic:              1736  out of   5720    30%  

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:   2370
   Number with an unused Flip Flop:    1354  out of   2370    57%  
   Number with an unused LUT:           634  out of   2370    26%  
   Number of fully used LUT-FF pairs:   382  out of   2370    16%  
   Number of unique control sets:        53

IO Utilization: 
 Number of IOs:                          27
 Number of bonded IOBs:                  22  out of    102    21%  

Specific Feature Utilization:
 Number of BUFG/BUFGCTRLs:                8  out of     16    50%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-------------------------------------------------------+-------------------------+-------+
Clock Signal                                           | Clock buffer(FF name)   | Load  |
-------------------------------------------------------+-------------------------+-------+
C_DB<0>(C_DB<0>1:O)                                    | NONE(*)(QT_0)           | 6     |
C_DB<1>(C_DB<1>1:O)                                    | NONE(*)(QT_1)           | 19    |
CLOCK                                                  | IBUF+BUFG               | 134   |
Mram__n169539(Mram__n1695391:O)                        | BUFG(*)(copied_1<2>_2)  | 85    |
Mram__n169538(Mram__n1695381:O)                        | BUFG(*)(copied_2<2>_0)  | 85    |
Mram__n169537(Mram__n1695371:O)                        | BUFG(*)(copied_3<2>_0)  | 85    |
Mram__n169536(Mram__n1695361:O)                        | BUFG(*)(copied_4<2>_0)  | 85    |
Mram__n169535(Mram__n1695351:O)                        | BUFG(*)(copied_5<2>_0)  | 85    |
Mram__n169534(Mram__n1695341:O)                        | BUFG(*)(copied_6<2>_0)  | 85    |
Mram__n169533(Mram__n1695331:O)                        | BUFG(*)(copied_7<2>_0)  | 85    |
Mram__n169532(Mram__n1695321:O)                        | NONE(*)(copied_8<2>_0)  | 85    |
Mram__n169531(Mram__n16953111:O)                       | NONE(*)(copied_9<2>_0)  | 85    |
Mram__n16953(Mram__n169531:O)                          | NONE(*)(copied_10<2>_0) | 85    |
PWR_6_o_PWR_6_o_AND_99_o(PWR_6_o_PWR_6_o_AND_99_o1:O)  | NONE(*)(Data_Pack_7_LDC)| 1     |
PWR_6_o_PWR_6_o_AND_98_o(PWR_6_o_PWR_6_o_AND_98_o1:O)  | NONE(*)(Data_Pack_6_LDC)| 1     |
PWR_6_o_GND_6_o_AND_100_o(PWR_6_o_GND_6_o_AND_100_o1:O)| NONE(*)(Data_Pack_5_LDC)| 1     |
PWR_6_o_PWR_6_o_AND_102_o(PWR_6_o_PWR_6_o_AND_102_o1:O)| NONE(*)(Data_Pack_4_LDC)| 1     |
PWR_6_o_PWR_6_o_AND_104_o(PWR_6_o_PWR_6_o_AND_104_o1:O)| NONE(*)(Data_Pack_3_LDC)| 1     |
PWR_6_o_PWR_6_o_AND_106_o(PWR_6_o_PWR_6_o_AND_106_o1:O)| NONE(*)(Data_Pack_2_LDC)| 1     |
PWR_6_o_PWR_6_o_AND_108_o(PWR_6_o_PWR_6_o_AND_108_o1:O)| NONE(*)(Data_Pack_1_LDC)| 1     |
-------------------------------------------------------+-------------------------+-------+
(*) These 19 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.
INFO:Xst:2169 - HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -3

   Minimum period: 8.562ns (Maximum Frequency: 116.800MHz)
   Minimum input arrival time before clock: 4.855ns
   Maximum output required time after clock: 7.481ns
   Maximum combinational path delay: 4.372ns

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'CLOCK'
  Clock period: 8.562ns (frequency: 116.800MHz)
  Total number of paths / destination ports: 44131 / 317
-------------------------------------------------------------------------
Delay:               8.562ns (Levels of Logic = 9)
  Source:            getData_2_0_1 (FF)
  Destination:       RED (FF)
  Source Clock:      CLOCK rising
  Destination Clock: CLOCK rising

  Data Path: getData_2_0_1 to RED
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q             16   0.447   1.005  getData_2_0_1 (getData_2_0_1)
     LUT2:I1->O           24   0.205   1.401  Mmux_n420821_3 (Mmux_n4208212)
     LUT5:I2->O            1   0.205   0.827  Mram__n5290218111 (_n52902<5>)
     LUT6:I2->O            1   0.203   0.000  Mmux_GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<3>_51 (Mmux_GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<3>_51)
     MUXF7:I1->O           1   0.140   0.000  Mmux_GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<3>_4_f7 (Mmux_GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<3>_4_f7)
     MUXF8:I0->O           1   0.144   0.684  Mmux_GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<3>_2_f8 (GND_6_o_copied_L2_2[15][0]_wide_mux_4011_OUT<3>)
     LUT5:I3->O            1   0.203   0.808  Mmux_GND_6_o_GND_6_o_MUX_924_o1130 (Mmux_GND_6_o_GND_6_o_MUX_924_o115)
     LUT5:I2->O            3   0.205   0.995  Mmux_GND_6_o_GND_6_o_MUX_924_o1132 (Mmux_GND_6_o_GND_6_o_MUX_924_o117)
     LUT5:I0->O            1   0.203   0.580  Mmux_GND_6_o_GND_6_o_MUX_924_o1153_SW1 (N22)
     LUT6:I5->O            1   0.205   0.000  RED_glue_set (RED_glue_set)
     FDR:D                     0.102          RED
    ----------------------------------------
    Total                      8.562ns (2.262ns logic, 6.300ns route)
                                       (26.4% logic, 73.6% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'C_DB<1>'
  Clock period: 3.220ns (frequency: 310.540MHz)
  Total number of paths / destination ports: 110 / 22
-------------------------------------------------------------------------
Delay:               3.220ns (Levels of Logic = 1)
  Source:            counter_up_next_char_1 (FF)
  Destination:       counter_up_next_char_0 (FF)
  Source Clock:      C_DB<1> rising
  Destination Clock: C_DB<1> rising

  Data Path: counter_up_next_char_1 to counter_up_next_char_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDRE:C->Q            21   0.447   1.458  counter_up_next_char_1 (counter_up_next_char_1)
     LUT5:I0->O            4   0.203   0.683  _n130671 (_n13067)
     FDRE:R                    0.430          counter_up_next_char_0
    ----------------------------------------
    Total                      3.220ns (1.080ns logic, 2.140ns route)
                                       (33.5% logic, 66.5% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'C_DB<0>'
  Clock period: 3.252ns (frequency: 307.536MHz)
  Total number of paths / destination ports: 40 / 10
-------------------------------------------------------------------------
Delay:               3.252ns (Levels of Logic = 1)
  Source:            counter_up_2 (FF)
  Destination:       counter_up_0 (FF)
  Source Clock:      C_DB<0> rising
  Destination Clock: C_DB<0> rising

  Data Path: counter_up_2 to counter_up_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDRE:C->Q            21   0.447   1.458  counter_up_2 (counter_up_2)
     LUT6:I1->O            5   0.203   0.714  _n130661 (_n13066)
     FDRE:R                    0.430          counter_up_0
    ----------------------------------------
    Total                      3.252ns (1.080ns logic, 2.172ns route)
                                       (33.2% logic, 66.8% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'C_DB<0>'
  Total number of paths / destination ports: 11 / 11
-------------------------------------------------------------------------
Offset:              3.707ns (Levels of Logic = 2)
  Source:            Char_L1 (PAD)
  Destination:       counter_up_0 (FF)
  Destination Clock: C_DB<0> rising

  Data Path: Char_L1 to counter_up_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             7   1.222   1.138  Char_L1_IBUF (Char_L1_IBUF)
     LUT6:I0->O            5   0.203   0.714  _n130661 (_n13066)
     FDRE:R                    0.430          counter_up_0
    ----------------------------------------
    Total                      3.707ns (1.855ns logic, 1.852ns route)
                                       (50.0% logic, 50.0% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'C_DB<1>'
  Total number of paths / destination ports: 23 / 23
-------------------------------------------------------------------------
Offset:              3.891ns (Levels of Logic = 2)
  Source:            Char_Okay (PAD)
  Destination:       counter_up_next_char_0 (FF)
  Destination Clock: C_DB<1> rising

  Data Path: Char_Okay to counter_up_next_char_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            29   1.222   1.354  Char_Okay_IBUF (Char_Okay_IBUF)
     LUT5:I3->O            4   0.203   0.683  _n130671 (_n13067)
     FDRE:R                    0.430          counter_up_next_char_0
    ----------------------------------------
    Total                      3.891ns (1.855ns logic, 2.036ns route)
                                       (47.7% logic, 52.3% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'CLOCK'
  Total number of paths / destination ports: 152 / 130
-------------------------------------------------------------------------
Offset:              4.855ns (Levels of Logic = 3)
  Source:            Reset_1 (PAD)
  Destination:       getData_2_0 (FF)
  Destination Clock: CLOCK rising

  Data Path: Reset_1 to getData_2_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            14   1.222   1.186  Reset_1_IBUF (Reset_1_IBUF)
     LUT3:I0->O            1   0.205   0.944  _n13124_inv21 (_n13124_inv2)
     LUT6:I0->O            7   0.203   0.773  _n13124_inv1 (_n13124_inv)
     FDE:CE                    0.322          getData_2_0
    ----------------------------------------
    Total                      4.855ns (1.952ns logic, 2.903ns route)
                                       (40.2% logic, 59.8% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'CLOCK'
  Total number of paths / destination ports: 31 / 7
-------------------------------------------------------------------------
Offset:              7.481ns (Levels of Logic = 4)
  Source:            px_2 (FF)
  Destination:       HSYNC (PAD)
  Source Clock:      CLOCK rising

  Data Path: px_2 to HSYNC
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDR:C->Q             38   0.447   1.605  px_2 (px_2)
     LUT3:I0->O           15   0.205   0.982  GND_6_o_px[9]_LessThan_3967_o111 (GND_6_o_px[9]_LessThan_3967_o11)
     LUT5:I4->O            1   0.205   0.684  HSYNC2 (HSYNC2)
     LUT5:I3->O            1   0.203   0.579  HSYNC3 (HSYNC_OBUF)
     OBUF:I->O                 2.571          HSYNC_OBUF (HSYNC)
    ----------------------------------------
    Total                      7.481ns (3.631ns logic, 3.850ns route)
                                       (48.5% logic, 51.5% route)

=========================================================================
Timing constraint: Default path analysis
  Total number of paths / destination ports: 1 / 1
-------------------------------------------------------------------------
Delay:               4.372ns (Levels of Logic = 2)
  Source:            RESET (PAD)
  Destination:       SEND_CLEAR (PAD)

  Data Path: RESET to SEND_CLEAR
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             1   1.222   0.579  RESET_IBUF (SEND_CLEAR_OBUF)
     OBUF:I->O                 2.571          SEND_CLEAR_OBUF (SEND_CLEAR)
    ----------------------------------------
    Total                      4.372ns (3.793ns logic, 0.579ns route)
                                       (86.8% logic, 13.2% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock CLOCK
-------------------------+---------+---------+---------+---------+
                         | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock             |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-------------------------+---------+---------+---------+---------+
CLOCK                    |    8.562|         |         |         |
C_DB<1>                  |    3.656|         |         |         |
Mram__n16953             |         |    6.862|         |         |
Mram__n169531            |         |    6.862|         |         |
Mram__n169532            |         |    6.808|         |         |
Mram__n169533            |         |    6.879|         |         |
Mram__n169534            |         |    6.862|         |         |
Mram__n169535            |         |    6.832|         |         |
Mram__n169536            |         |    6.838|         |         |
Mram__n169537            |         |    6.838|         |         |
Mram__n169538            |         |    6.670|         |         |
Mram__n169539            |         |    6.789|         |         |
PWR_6_o_GND_6_o_AND_100_o|         |    3.690|         |         |
PWR_6_o_PWR_6_o_AND_102_o|         |    3.588|         |         |
PWR_6_o_PWR_6_o_AND_104_o|         |    3.807|         |         |
PWR_6_o_PWR_6_o_AND_106_o|         |    3.824|         |         |
PWR_6_o_PWR_6_o_AND_108_o|         |    3.681|         |         |
PWR_6_o_PWR_6_o_AND_98_o |         |    3.833|         |         |
PWR_6_o_PWR_6_o_AND_99_o |         |    3.816|         |         |
-------------------------+---------+---------+---------+---------+

Clock to Setup on destination clock C_DB<0>
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |    3.252|         |         |         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock C_DB<1>
-------------------------+---------+---------+---------+---------+
                         | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock             |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-------------------------+---------+---------+---------+---------+
C_DB<0>                  |    3.220|         |         |         |
C_DB<1>                  |    3.220|         |         |         |
PWR_6_o_GND_6_o_AND_100_o|         |    2.797|         |         |
PWR_6_o_PWR_6_o_AND_102_o|         |    2.797|         |         |
PWR_6_o_PWR_6_o_AND_104_o|         |    2.797|         |         |
PWR_6_o_PWR_6_o_AND_106_o|         |    2.797|         |         |
PWR_6_o_PWR_6_o_AND_108_o|         |    2.797|         |         |
PWR_6_o_PWR_6_o_AND_98_o |         |    2.797|         |         |
PWR_6_o_PWR_6_o_AND_99_o |         |    2.797|         |         |
-------------------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n16953
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169531
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169532
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169533
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169534
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169535
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169536
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169537
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169538
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock Mram__n169539
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    4.337|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock PWR_6_o_GND_6_o_AND_100_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    3.112|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock PWR_6_o_PWR_6_o_AND_102_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    3.090|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock PWR_6_o_PWR_6_o_AND_104_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    3.090|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock PWR_6_o_PWR_6_o_AND_106_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    3.090|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock PWR_6_o_PWR_6_o_AND_108_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    3.090|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock PWR_6_o_PWR_6_o_AND_98_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    3.086|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock PWR_6_o_PWR_6_o_AND_99_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
C_DB<0>        |         |         |    3.220|         |
---------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 649.00 secs
Total CPU time to Xst completion: 178.29 secs
 
--> 


Total memory usage is 710552 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings : 1817 (   0 filtered)
Number of infos    :  147 (   0 filtered)

